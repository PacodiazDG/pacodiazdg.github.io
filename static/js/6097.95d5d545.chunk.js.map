{"version":3,"file":"static/js/6097.95d5d545.chunk.js","mappings":"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","sources":["Componets/My/editprofile.tsx","Componets/inputs.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Api} from '../../types';\r\nimport config from '../../Config.json';\r\nimport './../../Css/my.css';\r\nimport CustomToast from '../defaulttoast';\r\nimport {Customizedinput1} from '../inputs';\r\nimport Qfetch from '../../Logic/Http_Ferch';\r\nimport {responseJson} from '../../Logic/ToolkitFerch';\r\n\r\nfunction EditPorfile() {\r\n  // eslint-disable-next-line prefer-const\r\n  let UserStructure: Api.ApiMyUser = {\r\n    Username: '',\r\n    FirstName: '',\r\n    LastName: '',\r\n    Permissions: '',\r\n    Email: '',\r\n    ID: '',\r\n    Image: '',\r\n    Password: '',\r\n    Banned: false,\r\n  };\r\n  const [userInfo, setuserInfo] = useState(UserStructure);\r\n  useEffect(() => {\r\n    Qfetch.ahutRqst(`${config.ApiBackend}${config.ApiRoutes.User[0].My}`)\r\n        .then((e)=>responseJson(e)).then((e)=>{\r\n          setuserInfo(e.Info);\r\n        }).catch((err) => {\r\n          CustomToast.errorDefaultToast(err);\r\n        });\r\n  }, []);\r\n\r\n\r\n  const updateinfo= React.useCallback(()=>{\r\n    Qfetch.ahutRqst(`${config.ApiBackend}${config.ApiRoutes.User[0].UpdateProfile}`, undefined,\r\n        {method: 'PUT', body: JSON.stringify(UserStructure)})\r\n        .then((response) => responseJson(response))\r\n        .catch((err) => {\r\n          CustomToast.errorDefaultToast(err);\r\n        });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center row mb-4 pt-4 p-4\">\r\n      <div className=\"m-3\">\r\n        <h1>Edit my information</h1>\r\n        <p>Set up account information, passwords, email, and more.</p>\r\n        <p>edit the parameters you need</p>\r\n      </div>\r\n      <div>\r\n        <Customizedinput1 name=\"First Name\" text={userInfo.FirstName} values={ React.useCallback((e)=>{\r\n          UserStructure.FirstName=e;\r\n        }, [])}/>\r\n        <Customizedinput1 name=\"Last Name\" text={userInfo.LastName} values={ React.useCallback((e)=>{\r\n          UserStructure.LastName=e;\r\n        }, [])}/>\r\n        <Customizedinput1 name=\"Username\" text={userInfo.Username} values={ React.useCallback((e)=>{\r\n          UserStructure.Username=e;\r\n        }, [])}/>\r\n        <Customizedinput1 name=\"Image\" text={userInfo.Image}values={ React.useCallback((e)=>{\r\n          UserStructure.Image=e;\r\n        }, [])}/>\r\n        <Customizedinput1 name=\"Password\" text=\"\" type='password' values={ React.useCallback((e)=>{\r\n          UserStructure.Password=e;\r\n        }, [])}/>\r\n        <div className=\"w-100\">\r\n          <button type=\"button\" className=\"w-100 p-3  btn btn-dark\" onClick={updateinfo}>Save Changes</button>\r\n        </div>\r\n        <div className=\"card text-white bg-danger mb-3 mt-4\">\r\n          <div className=\"card-header\">Danger zone</div>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Delate Account</h5>\r\n            <p>Are you sure that you want to delete your account? This will immediately log you out of your account and you will not be able to log in again.</p>\r\n            <button type=\"button\" className=\"btn btn-outline-warning\">Danger zone</button>\r\n\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Disable  Account</h5>\r\n            <p>Are you sure that you want to disable your account? This will immediately log you out and make your account inaccessible to anyone.</p>\r\n            <button type=\"button\" className=\"btn btn-outline-warning\">Disable Account</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPorfile;\r\n","import React from 'react';\r\n\r\n\r\nexport function Customizedinput1(params: {\r\n  name: string;\r\n  values: (e:string) => void;\r\n  text:string;\r\n  type?:string;\r\n}) {\r\n  let type='text';\r\n  if (params.type=='password') {\r\n    type='password';\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"input-group input-group-sm mb-3\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"border border-0  input-group-text bg-dark text-white\" id=\"inputGroup-sizing-sm text-white\">{params.name}</span>\r\n        </div>\r\n        <input type={type} className=\" border border-0  form-control bg-dark text-white \" placeholder={params.text} onChange={ React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n          params.values(e.target.value);\r\n        }, [])}></input>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport function CustomizedChecks1(customizedChecks: { label: string, defaultchecked:boolean, callback: (e: React.ChangeEvent<HTMLInputElement>) => void }) {\r\n  return (\r\n    <div>\r\n      <div className=\"form-check m-2\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n              {customizedChecks.label}\r\n            </label>\r\n          </div>\r\n          <div className=\"col\">\r\n            <input className=\"form-check-input\" defaultChecked={customizedChecks.defaultchecked} onChange={customizedChecks.callback} type=\"checkbox\" value=\"\" id=\"flexCheckDefault\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"names":["UserStructure","Username","FirstName","LastName","Permissions","Email","ID","Image","Password","Banned","_useState","useState","_useState2","_slicedToArray","userInfo","setuserInfo","useEffect","Qfetch","ahutRqst","concat","config","then","e","responseJson","Info","catch","err","CustomToast","errorDefaultToast","updateinfo","React","undefined","method","body","JSON","stringify","response","_jsxs","className","children","_jsx","Customizedinput1","name","text","values","type","onClick","params","id","placeholder","onChange","target","value","CustomizedChecks1","customizedChecks","htmlFor","label","defaultChecked","defaultchecked","callback"],"sourceRoot":""}